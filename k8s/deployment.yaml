apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-mod-bot
  namespace: bots
  labels:
    app: telegram-mod-bot
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: telegram-mod-bot
  template:
    metadata:
      labels:
        app: telegram-mod-bot
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: telegram-bot-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: telegram-bot
        image: ghcr.io/yourusername/telegram-mod-bot:latest
        imagePullPolicy: Always
        env:
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: telegram-bot-secrets
              key: bot-token
        - name: LOG_LEVEL
          value: "INFO"
        - name: MAX_WORKERS
          value: "2"
        - name: CACHE_SIZE
          value: "1000"
        - name: RATE_LIMIT
          value: "10"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import asyncio; from src.bot import TelegramModerationBot; bot = TelegramModerationBot('dummy'); result = asyncio.run(bot.health_check()); sys.exit(0 if result['status'] == 'healthy' else 1)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: models
          mountPath: /app/models
        - name: bot-data
          mountPath: /home/botuser/.telegram_bot
      volumes:
      - name: config
        configMap:
          name: telegram-bot-config
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      - name: bot-data
        persistentVolumeClaim:
          claimName: bot-data-pvc
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: telegram-bot-service
  namespace: bots
spec:
  selector:
    app: telegram-mod-bot
  ports:
  - port: 9090
    targetPort: 9090
    name: metrics
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegram-bot-config
  namespace: bots
data:
  config.yaml: |
    telegram:
      max_message_length: 4096
    moderation:
      thresholds:
        toxicity: 0.7
        spam: 0.6
        harassment: 0.6
    policies:
      - type: "spam"
        threshold: 0.8
      - type: "harassment"
        threshold: 0.7
      - type: "nsfw"
        threshold: 0.9
---
apiVersion: v1
kind: Secret
metadata:
  name: telegram-bot-secrets
  namespace: bots
type: Opaque
stringData:
  bot-token: "YOUR_BOT_TOKEN_HERE"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: bots
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bot-data-pvc
  namespace: bots
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegram-bot-sa
  namespace: bots
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: telegram-bot-pdb
  namespace: bots
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: telegram-mod-bot
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: telegram-bot-hpa
  namespace: bots
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: telegram-mod-bot
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80